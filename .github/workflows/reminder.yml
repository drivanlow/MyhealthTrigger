# =====================================================
# OPTIMIZED GITHUB WORKFLOW: REMINDER CRON
# Purpose: Call unified overdue notification system with better timing
# =====================================================

name: Optimized Reminder Cron

on:
  schedule:
    # Every 5 minutes during active hours for maximum precision
    # 6 AM - 11 PM Malaysia time (UTC+8 = 22:00-15:59)
    - cron: '*/5 22-23,0-15 * * *'  # Every 5 minutes from 6 AM - 11 PM Malaysia time
  
  # Allow manual trigger for testing
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test mode - run immediately'
        required: false
        default: 'false'
        type: boolean

jobs:
  reminder-cron:
    name: Process Health Task Reminders
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Add timeout protection
    
    steps:
      - name: Check Malaysia time and timing precision
        run: |
          echo "Current UTC time: $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "Malaysia time: $(TZ='Asia/Kuala_Lumpur' date '+%Y-%m-%d %H:%M:%S')"
          echo "Workflow triggered by: ${{ github.event_name }}"
          echo "Cron expression should hit common reminder times precisely"
      
      - name: Call unified reminder system with retry logic
        env:
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          echo "üïê Calling unified overdue notification system..."
          
          # Retry logic for reliability
          MAX_RETRIES=3
          RETRY_COUNT=0
          SUCCESS=false
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ] && [ "$SUCCESS" = false ]; do
            echo "üîÑ Attempt $((RETRY_COUNT + 1)) of $MAX_RETRIES"
            
            # Call the personalized-reminders edge function
            RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
              --connect-timeout 30 \
              --max-time 120 \
              "https://wtuwjqvgkpbvfcplkhvo.functions.supabase.co/personalized-reminders" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
              -d '{"action":"schedule_check"}')
            
            # Extract HTTP status code and response body
            HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
            RESPONSE_BODY=$(echo "$RESPONSE" | head -n -1)
            
            echo "üìä HTTP Status: $HTTP_CODE"
            echo "üìÑ Response: $RESPONSE_BODY"
            
            # Check if request was successful
            if [ "$HTTP_CODE" -eq 200 ]; then
              echo "‚úÖ Reminder cron executed successfully!"
              SUCCESS=true
              
              # Extract and display metrics
              PROCESSED=$(echo "$RESPONSE_BODY" | grep -o '"processed_count":[0-9]*' | grep -o '[0-9]*' | head -1)
              ERRORS=$(echo "$RESPONSE_BODY" | grep -o '"error_count":[0-9]*' | grep -o '[0-9]*' | head -1)
              
              if [ -n "$PROCESSED" ]; then
                echo "üë• Users processed: $PROCESSED"
              fi
              if [ -n "$ERRORS" ]; then
                echo "‚ùå Errors encountered: $ERRORS"
              fi
              
            elif [ "$HTTP_CODE" -eq 504 ] || [ "$HTTP_CODE" -eq 502 ]; then
              echo "‚è≥ Server timeout/error (HTTP $HTTP_CODE), retrying..."
              RETRY_COUNT=$((RETRY_COUNT + 1))
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                echo "‚è∞ Waiting 10 seconds before retry..."
                sleep 10
              fi
              
            else
              echo "‚ùå Request failed with HTTP $HTTP_CODE"
              echo "Error details: $RESPONSE_BODY"
              SUCCESS=true  # Don't retry for client errors
            fi
          done
          
          if [ "$SUCCESS" = false ]; then
            echo "üí• All retry attempts failed"
            echo "‚ö†Ô∏è Edge function may be experiencing issues - check Supabase logs"
          fi
      
      - name: Success notification
        if: success()
        run: |
          echo "üéâ Reminder cron completed!"
          echo "‚è∞ Next run in 5 minutes"
          echo "üîç Check Supabase Edge Function logs for detailed execution info"

      - name: Failure notification
        if: failure()
        run: |
          echo "üí• Reminder cron workflow failed!"
          echo "üîç Check the logs above for error details"
          echo "‚ö†Ô∏è Users may not receive scheduled reminders until next successful run"
